<?xml version="1.0" encoding="utf-8" ?>
<castle xmlns="CCWindowsSchema">

    <properties>
      <ownerName>Ben Laan</ownerName>
      <copyright>Â© Copyright 2010</copyright>
    </properties>
  
    <facilities>
        <facility id="logging" type="Castle.Facilities.Logging.LoggingFacility, Castle.Facilities.Logging" loggingApi="log4net" />
        <facility
          id="nhibernate" isWeb="true"
          type="Castle.Facilities.NHibernateIntegration.NHibernateFacility, Castle.Facilities.NHibernateIntegration"
          configurationBuilder="Laan.Persistence.AutoMapping.AutoMappingBuilder, Laan.Persistence">
            <factory id="nhibernate.factory">
                <settings>
                    <item key="connection.provider">NHibernate.Connection.DriverConnectionProvider</item>
                    <item key="connection.driver_class">NHibernate.Driver.SQLiteDriver</item>
                    <!--<item key="connection.connection_string">:memory:;Version=3;New=True;Pooling=True;Max Pool=1;</item>-->
                    <item key="connection.connection_string">Data Source=|DataDirectory|\Data.s3db</item>
                    <item key="dialect">NHibernate.Dialect.SQLiteDialect</item>
                </settings>
                <options>
                    <!--<rebuild/>-->
                    <migrate>true</migrate>
                    <outputMappings>true</outputMappings>
                    <baseType>Laan.ContentMatters.Models.Item, Laan.ContentMatters</baseType>
                    <filterType>Laan.ContentMatters.Models.IIdentifiable, Laan.ContentMatters</filterType>
                </options>
                <assemblies>
                    <assembly>Laan.ContentMatters</assembly>
                    <assembly>Laan.ContentMatters.Models.Custom</assembly>
                </assemblies>
                <conventions>
                    <convention>Laan.Persistence.AutoMapping.ManyToOneConvention, Laan.Persistence</convention>
                    <convention>Laan.Persistence.AutoMapping.OneToManyConvention, Laan.Persistence</convention>
                    <convention>Laan.Persistence.AutoMapping.ForeignKeyConvention, Laan.Persistence</convention>
                    <convention>Laan.Persistence.AutoMapping.IdentityConvention, Laan.Persistence</convention>
                    <convention>Laan.Persistence.AutoMapping.EnumConvention, Laan.Persistence</convention>
                    <convention>Laan.Persistence.AutoMapping.ClassConvention, Laan.Persistence</convention>
                    <!--
                        <convention>Laan.Persistence.AutoMapping.CollectionListTypeConvention`1[[Laan.ContentMatters.Models.ItemListType]], Laan.Persistence</convention>
                    -->
                </conventions>
            </factory>
        </facility>
    </facilities>

    <components>

        <component
          id="Mapper"
          service="Laan.Persistence.Interfaces.IMapper, Laan.Persistence"
          type="Laan.ContentMatters.Engine.ServerMapper, Laan.ContentMatters"
        />

        <component
          id="DefinitionService"
          service="Laan.ContentMatters.Engine.Interfaces.IDefinitionService, Laan.ContentMatters"
          type="Laan.ContentMatters.Engine.Services.DefinitionService, Laan.ContentMatters"
        />

        <component
          id="ViewLoader"
          service="Laan.ContentMatters.Engine.Interfaces.IViewLoader, Laan.ContentMatters"
          type="Laan.ContentMatters.Loaders.ViewLoader, Laan.ContentMatters">
            <parameters>
                <indentationSize>4</indentationSize>
            </parameters>
        </component>

        <component
          id="DataProvider"
          service="Laan.ContentMatters.Engine.Interfaces.IDataProvider, Laan.ContentMatters"
          type="Laan.ContentMatters.Engine.Data.DataProvider, Laan.ContentMatters"
        />

        <component
          id="PageController"
          service="Laan.ContentMatters.Controllers.IPageController, Laan.ContentMatters"
          type="Laan.ContentMatters.Controllers.PageController, Laan.ContentMatters"
          lifestyle="transient"
        />

        <component
          id="CumulousViewEngine"
          service="Laan.ContentMatters.Engine.ICumulousViewEngine, Laan.ContentMatters"
          type="Laan.ContentMatters.Engine.CumulousViewEngine, Laan.ContentMatters"
        />
      
        <component
          id="SiteProperties"
          service="Laan.ContentMatters.Engine.Interfaces.ISiteProperties, Laan.ContentMatters"
          type="Laan.ContentMatters.Configuration.SiteProperties, Laan.ContentMatters">
          <parameters>
            <properties>
                <dictionary>
                    <entry key="copyright">${copyright}</entry>
                    <entry key="ownerName">${ownerName}</entry>
                </dictionary>
            </properties>
        </parameters>
        </component>

        <component
          id="ListProvider"
          service="Laan.ContentMatters.Engine.Interfaces.IXmlProvider, Laan.ContentMatters"
          type="Laan.ContentMatters.Engine.HtmlProviders.ListProvider, Laan.ContentMatters"
        />

        <component
            id="WikipediaProvider"
            service="Laan.ContentMatters.Engine.Interfaces.IXmlProvider, Laan.ContentMatters"
            type="Laan.ContentMatters.Engine.HtmlProviders.WikipediaProvider, Laan.ContentMatters"
        />

        <component
            id="BreadcrumbsProvider"
            service="Laan.ContentMatters.Engine.Interfaces.IXmlProvider, Laan.ContentMatters"
            type="Laan.ContentMatters.Engine.HtmlProviders.BreadcrumbsProvider, Laan.ContentMatters"
        />

        <component
            id="DataDictionary"
            service="Laan.ContentMatters.Engine.Interfaces.IDataDictionary, Laan.ContentMatters"
            type="Laan.ContentMatters.Engine.Data.DataDictionary, Laan.ContentMatters"
        />

    </components>

</castle>
